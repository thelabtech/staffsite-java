/* Generated by Together */

package org.alt60m.util;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateUtils {
    public static java.sql.Date toSQLDate(java.util.Date date) {
        return new java.sql.Date(date.getTime());
    }
	public static java.sql.Date subtractDay(java.sql.Date date) {
		return new java.sql.Date(date.getTime()-86400000);
	}
	public static java.sql.Date addDay(java.sql.Date date) {
		return new java.sql.Date(date.getTime()+86400000);
	}
	public static java.util.Date clearTimeFromDate(java.util.Date date) {
	    if (date != null) {
			Calendar cin = Calendar.getInstance();
			Calendar cout = Calendar.getInstance();
			cin.setTime(date);
			cout.clear();
			cout.set(cin.get(Calendar.YEAR), cin.get(Calendar.MONTH), cin.get(Calendar.DATE));
			return cout.getTime();
	    } else {
			return null;
		}
	}

	public static boolean isToday(java.util.Date date) {
		return isSameDay(new java.util.Date(), date);
	}

	public static boolean isSameDay(java.util.Date date1, java.util.Date date2) {
		if(date1==null || date2==null) return false;

		Calendar c1 = Calendar.getInstance();
		c1.setTime(date1);
		Calendar c2 = Calendar.getInstance();
		c2.setTime(date2);

		if( (c1.get(Calendar.YEAR) == c2.get(Calendar.YEAR))
		 && (c1.get(Calendar.DAY_OF_YEAR) == c2.get(Calendar.DAY_OF_YEAR)) ) {
			return true;
		} else {
			return false;
		}
	}
	public static Date parseDate(String dateString) throws ParseException {
		Date date;
		try {
			SimpleDateFormat format = new SimpleDateFormat(
					"yyyy-MM-dd");
			date = format.parse(dateString);
		} catch (ParseException e) {
			try {
				SimpleDateFormat format = new SimpleDateFormat(
						"MM/dd/yyyy HH:mm:ss a");
				date = format.parse(dateString);
			} catch (ParseException e1) {
				SimpleDateFormat format = new java.text.SimpleDateFormat(
						"MM/dd/yyyy");
				date = format.parse(dateString);
			}
		}
		return date;
	}


}
