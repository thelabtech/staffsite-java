<project name="staff" default="compile" basedir=".">
 
	<target name="usage" depends="init">
		<echo message=""/>
		<echo message="${name} build file"/>
		<echo message="-------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=" Available targets are :"/>
		<echo message=""/>
		<echo message="   compile      --> compiles the src dir to the build dir (default)"/>
		<echo message="   dist         --> generates the distributable war file"/>
		<echo message="   clean        --> erases the build directory"/>
		<echo message="   source       --> generates source zip of the project"/>
		<echo message="   docs         --> generates the docs (javadoc, ...)"/>
		<echo message="   tests_tomcat_40 --> run tests for Tomcat 4.0"/>
		<echo message=""/>
	</target>

	<path id="project.class.path">
		<pathelement location="..\..\..\classes"/>
		<fileset dir="..\..\..\auxclasses">
			<include name="lib\*.zip"/>
			<include name="lib\*.jar"/>
			<include name="classes"/>
			<!-- <exclude name="lib\j2ee.jar"> needed for generating docs for whatever reason-->
		</fileset>
	</path>

	<target name="init">
		<!-- Generic project properties -->
		<property name="app.name" value="CM StaffSite"/>
		<property name="app.version" value="3.0.0"/>
		<property name="app.project" value="staffsite"/>
		<property name="out.dir" value="../../../tomcat/webapps/${app.project}"/>
		<property name="out.dist.dir" value="../../../webapps-dist/${app.project}"/>

		<!-- Destination locations for the build (relative to the basedir as -->
		<!-- specified in the basedir attribute of the project tag)          -->
		<property name="out.src.dir" value="${out.dir}/src"/>
		<property name="out.webinf.dir" value="${out.dir}/WEB-INF"/>
		<property name="out.classes.dir" value="${out.webinf.dir}/classes"/>
		<property name="out.test.dir" value="${out.classes.dir}"/>
		<property name="out.lib.dir" value="${out.webinf.dir}/lib"/>
		<property name="out.doc.dir" value="../../../doc/${app.project}"/>
		<property name="out.api.dir"  value="${out.doc.dir}/api"/>
		<property name="out.javadoc.dir" value="${out.doc.dir}/api"/>
		<property name="out.conf.dir" value="${out.dir}/conf"/>

		<!-- Source locations for the build -->
		<property name="src.dir" value="src"/>
		<property name="src.java.dir" value="${src.dir}/share"/>
		<property name="src.java.servlet.dir" value="${src.dir}/servlet22"/>
		<property name="src.java.ant.dir" value="${src.dir}/ant"/>
		<property name="build.dir" value="build"/>
		<property name="etc.dir" value="etc"/>
		<property name="lib.dir" value="lib"/>
		<property name="web.dir" value="web"/>
		<property name="doc.dir" value="doc"/>
		<property name="test.dir" value="test"/>

		<!-- Names of deliverables -->
		<property name="dist.src" value="${app.project}.jar"/>
		<property name="dist.war" value="${app.project}.war"/>

		<!-- Miscellaneous settings -->
		<property name="build.compiler" value="modern"/>
		<property name="year" value="2003"/>
		<property name="ant.home" value="."/>
		<property name="debug" value="on"/>
		<property name="optimize" value="off"/>
		<property name="deprecation" value="off"/>
	</target>

    <target name="env" depends="init">
        <echo message="build.compiler = ${build.compiler}"/>
        <echo message="java.class.path = ${java.class.path}"/>
        <echo message="java.home = ${java.home}"/>
        <echo message="user.home = ${user.home}"/>
    </target>

	<target name="docs" depends="env">
		<javadoc   classpathref="project.class.path"
				   sourcepath="src"
				   sourcefiles="src/*.java"
				   Private="true"
				   destdir="${out.api.dir}"
				   author="true"
				   version="true">
		</javadoc>
		<copy todir="${out.doc.dir}">
			<fileset dir="${doc.dir}" includes="**/*.*"/>
		</copy>
	</target>

	<target name="prepare" depends="init">
		<tstamp/>
		<mkdir  dir="${out.dir}"/>
		<copy todir="${out.dir}">
			<fileset dir="${web.dir}"/>
		</copy>
		<mkdir dir="${out.webinf.dir}"/>
		<copy todir="${out.webinf.dir}">
			<fileset dir="${etc.dir}"/>
		</copy>
		<mkdir dir="${out.classes.dir}"/>
		<mkdir dir="${out.lib.dir}"/>
		<copy todir="${out.lib.dir}">
			<fileset dir="${lib.dir}"/>
		</copy>
	</target>

	<target name="clean" depends="init">
		<delete dir="${out.dir}"/>
	</target>

	<!-- classpath="${out.classes.dir}"-->
	<target name="compile" depends="prepare">
		<javac srcdir="${src.dir}" destdir="${out.classes.dir}" debug="on" optimize="off" deprecation="off">
			<classpath refid="project.class.path"/>
		</javac>
		<javac srcdir="${test.dir}" destdir="${out.test.dir}"
			   classpath="${out.classes.dir}"
			   debug="on" optimize="off" deprecation="off"/>
		<copy todir="${out.classes.dir}">
			<fileset dir="${src.dir}" includes="**/*.properties"/>
		</copy>
	</target>

	<path id="project.class.path.deploy">
		<fileset dir="..\..\..">
			<include name="auxclasses\lib\*.jar"/>
			<include name="${deploy.dir}\WEB-INF\lib\*.jar"/>
		</fileset>
	</path>
	<target name="prepare_deploy" depends="init">
		<property name="deploy.directory" value="../../../${deploy.dir}/"/>
		<tstamp/>
		<mkdir  dir="${deploy.directory}"/>
		<copy todir="${deploy.directory}">
			<fileset dir="${web.dir}"/>
		</copy>
		<mkdir dir="${deploy.directory}/WEB-INF/"/>
		<copy todir="${deploy.directory}/WEB-INF/">
			<fileset dir="${etc.dir}"/>
		</copy>
		<mkdir dir="${deploy.directory}/WEB-INF/lib/"/>
		<mkdir dir="${deploy.directory}/WEB-INF/classes/"/>
		<copy todir="${deploy.directory}/WEB-INF/classes/">
			<fileset dir="../../../auxclasses/classes/"/>
		</copy>

		<javac srcdir="${src.dir}" destdir="${deploy.directory}/WEB-INF/classes/" debug="off" optimize="on" deprecation="off">
			<classpath refid="project.class.path.deploy"/>
		</javac>
		<copy todir="${deploy.directory}/WEB-INF/classes/">
			<fileset dir="${src.dir}" includes="**/*.properties"/>
		</copy>
	</target>


	<target name="all" depends="clean,prepare,compile"/>

	<target name="init-dist">
		<!-- set global properties for this build -->
		<!-- Generic project properties -->
		<property name="app.name" value="CM StaffSite"/>
		<property name="app.version" value="3.0.0"/>
		<property name="app.project" value="staffsite"/>
      
		<property name="out.dir" value="../../../tomcat/webapps/${app.project}-tmp"/>
		<property name="out.dist.dir" value="../../../webapps-dist/${app.project}"/>

		<!-- current jars dir-->
		<property name="current.jars.dir" value="../../../classes-dist/current"/>

		<!-- Destination locations for the build (relative to the basedir as -->
		<!-- specified in the basedir attribute of the project tag)          -->
		<property name="out.src.dir" value="${out.dir}/src"/>
		<property name="out.webinf.dir" value="${out.dir}/WEB-INF"/>
		<property name="out.classes.dir" value="${out.webinf.dir}/classes"/>
		<property name="out.test.dir" value="${out.classes.dir}"/>
		<property name="out.lib.dir" value="${out.webinf.dir}/lib"/>
		<property name="out.doc.dir" value="${out.dir}/doc"/>
		<property name="out.javadoc.dir" value="${out.doc.dir}/api"/>
		<property name="out.conf.dir" value="${out.dir}/conf"/>

		<!-- Source locations for the build -->
		<property name="src.dir" value="src"/>
		<property name="src.java.dir" value="${src.dir}/share"/>
		<property name="src.java.servlet.dir" value="${src.dir}/servlet22"/>
		<property name="src.java.ant.dir" value="${src.dir}/ant"/>
		<property name="build.dir" value="build"/>
		<property name="etc.dir" value="etc"/>
		<property name="lib.dir" value="lib"/>
		<property name="web.dir" value="web"/>
		<property name="doc.dir" value="doc"/>
		<property name="test.dir" value="test"/>

		<!-- Names of deliverables -->
		<property name="dist.src" value="${app.project}.jar"/>
		<property name="dist.war" value="${app.project}.war"/>

		<!-- Miscellaneous settings -->
		<property name="build.compiler" value="modern"/>
		<property name="year" value="2001"/>
		<property name="ant.home" value="."/>
		<property name="debug" value="on"/>
		<property name="optimize" value="off"/>
		<property name="deprecation" value="off"/>
	</target>

	<target name="dist" depends="init-dist">
		<tstamp/>
		<delete dir="${out.dir}"/>

		<!-- prep work -->
		<mkdir  dir="${out.dir}"/>
		<copy todir="${out.dir}">
			<fileset dir="${web.dir}"/>
		</copy>
		<mkdir dir="${out.webinf.dir}"/>
		<copy todir="${out.webinf.dir}">
			<fileset dir="${etc.dir}"/>
		</copy>
		<mkdir dir="${out.classes.dir}"/>
		<mkdir dir="${out.lib.dir}"/>
		<copy todir="${out.lib.dir}">
			<fileset dir="${lib.dir}"/>
		</copy>

		<!-- compile the src stuff -->
		<javac srcdir="${src.dir}" destdir="${out.classes.dir}" debug="on" optimize="off" deprecation="off">
		<classpath refid="project.class.path"/>
		</javac>
		<javac srcdir="${test.dir}" destdir="${out.test.dir}"
			   classpath="${out.classes.dir}"
			   debug="on" optimize="off" deprecation="off"/>
		<copy todir="${out.classes.dir}">
			<fileset dir="${src.dir}" includes="**/*.properties"/>
		</copy>

		<!-- grab the current jars -->
		<copy todir="${out.lib.dir}">
		  <fileset dir="${current.jars.dir}" includes="*"/>
		</copy>    

		<!-- Make the distribution dir-->
		<mkdir dir="${out.dist.dir}/${DSTAMP}"/>
		<mkdir dir="${out.dist.dir}/current"/>

		<copy todir="${out.dist.dir}/${DSTAMP}/unpacked">
		<fileset dir="${out.dir}" />
		</copy>
   
		<jar jarfile="${out.dist.dir}/${DSTAMP}/${dist.war}" 
		  basedir="${out.dir}" 
		/>
		<copy todir="${out.dist.dir}/current">
		  <fileset dir="${out.dist.dir}/${DSTAMP}" />
		</copy>

		<!-- since we compiled into a temp dir, delete it!-->
		<delete dir="${out.dir}"/>
	</target>

</project>